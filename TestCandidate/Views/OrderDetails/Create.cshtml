@model TestCandidate.Models.OrderDetails

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>OrderDetails</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="OrderID" class="control-label"></label>
                <select asp-for="OrderID" class="form-control" asp-items="ViewBag.OrderID"></select>
            </div>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProductID" class="control-label"></label>
                <select asp-for="ProductID" class="form-control" asp-items="ViewBag.ProductID"></select>
            </div>
            <div class="form-group">
                <label asp-for="Discount" class="control-label"></label>
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "yes",
                        Value = "1"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "no",
                        Value = "0",
                        Selected = true
                    });
                }

                @Html.DropDownListFor(model => model.Discount, listItems, "-- Select Status --")
            </div>
            <div class="form-group">
                <input type="submit" value="Add" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Order" asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
